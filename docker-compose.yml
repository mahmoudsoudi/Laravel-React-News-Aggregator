version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: aggregator_postgres
    environment:
      POSTGRES_DB: aggregator
      POSTGRES_USER: aggregator
      POSTGRES_PASSWORD: aggregator_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - aggregator_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: aggregator_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - aggregator_network

  # Laravel Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aggregator_backend
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=aggregator
      - DB_USERNAME=aggregator
      - DB_PASSWORD=aggregator_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - CACHE_DRIVER=redis
      - SESSION_DRIVER=redis
      - QUEUE_CONNECTION=redis
      # News API Keys
      - NEWSAPI_KEY=${NEWSAPI_KEY}
      - GUARDIAN_API_KEY=${GUARDIAN_API_KEY}
      - NYTIMES_API_KEY=${NYTIMES_API_KEY}
    volumes:
      - ./backend:/var/www/html
      - ./cron:/etc/cron.d
      - ./logs:/var/log
    depends_on:
      - postgres
      - redis
    networks:
      - aggregator_network
    command: >
      sh -c "
        # Wait for database to be ready
        until php artisan migrate:status; do
          echo 'Waiting for database...'
          sleep 2
        done
        
        # Run migrations if needed
        php artisan migrate --force
        
        # Seed initial data
        php artisan db:seed --force
        
        # Start PHP-FPM and cron
        php-fpm &
        cron -f
      "

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: aggregator_frontend
    ports:
      - "3000:80"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api
    networks:
      - aggregator_network

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: aggregator_nginx
    ports:
      - "8000:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./backend:/var/www/html
    depends_on:
      - backend
    networks:
      - aggregator_network

  # News Aggregation Scheduler (Separate container for cron)
  scheduler:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: aggregator_scheduler
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=aggregator
      - DB_USERNAME=aggregator
      - DB_PASSWORD=aggregator_password
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      # News API Keys
      - NEWSAPI_KEY=${NEWSAPI_KEY}
      - GUARDIAN_API_KEY=${GUARDIAN_API_KEY}
      - NYTIMES_API_KEY=${NYTIMES_API_KEY}
    volumes:
      - ./backend:/var/www/html
      - ./cron:/etc/cron.d
      - ./logs:/var/log
    depends_on:
      - postgres
      - redis
      - backend
    networks:
      - aggregator_network
    command: >
      sh -c "
        # Wait for database to be ready
        until php artisan migrate:status; do
          echo 'Waiting for database...'
          sleep 2
        done
        
        # Start cron daemon
        echo 'Starting news aggregation scheduler...'
        cron -f
      "

volumes:
  postgres_data:
  redis_data:

networks:
  aggregator_network:
    driver: bridge